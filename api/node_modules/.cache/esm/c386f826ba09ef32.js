let DataLoader,models,model,Schema;_ba0‍.x([["projectLoader",()=>projectLoader],["default",()=>_ba0‍.o]]);_ba0‍.w("dataloader",[["default",["DataLoader"],function(v){DataLoader=v}]]);_ba0‍.w("mongoose",[["models",["models"],function(v){models=v}],["model",["model"],function(v){model=v}],["Schema",["Schema"],function(v){Schema=v}]]);


const projectSchema = new Schema(
  {
    name: {
      type: String,
      required: true,
      trim: true,
    },
    color: {
      type: String,
      required: true,
      trim: true,
    },
    user: {
      type: Schema.Types.ObjectId,
      ref: "User",
      required: true,
    },
  },
  { timestamps: true }
);

const Project = models.Project || model("Project", projectSchema);
       const projectLoader = new DataLoader(projectIds =>
  Project.find({ _id: { $in: projectIds } }).execute()
);
_ba0‍.d(Project);
