let DataLoader,models,model,Schema;_b14‍.x([["taskLoader",()=>taskLoader],["default",()=>_b14‍.o]]);_b14‍.w("dataloader",[["default",["DataLoader"],function(v){DataLoader=v}]]);_b14‍.w("mongoose",[["models",["models"],function(v){models=v}],["model",["model"],function(v){model=v}],["Schema",["Schema"],function(v){Schema=v}]]);


const taskSchema = new Schema(
  {
    name: {
      type: String,
      required: true,
      trim: true,
    },
    date: {
      type: Date,
      required: true,
      trim: true,
    },
    user: {
      type: Schema.Types.ObjectId,
      ref: "User",
      required: true,
    },
    isArchived: {
      type: Boolean,
      required: true,
    },
    project: {
      type: Schema.Types.ObjectId,
      ref: "Project",
    },
  },
  { timestamps: true }
);

const Task = models.Task || model("Task", taskSchema);
       const taskLoader = new DataLoader(taskIds =>
  Task.find({ _id: { $in: taskIds } }).execute()
);
_b14‍.d(Task);
